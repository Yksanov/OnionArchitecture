@using Microsoft.AspNetCore.Server.Kestrel.Core
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model List<Onion.Domain.Entities.UserIdentity>

@{
    ViewBag.Title = "All Users";
}

<div class="d-flex justify-content-end mb-3">
    <button class="btn btn-dark" data-bs-toggle="model" data-bs-target="#createUserModal">
        <i class="fa-solid fa-plus"></i> Создать нового пользователя
    </button>
</div>
<div class="mt-3">
    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table id="users-table" class="display">
                <thead class="bg-dark">
                <tr>
                    <th class="text-white text-center" style="width: 16%;">Логин</th>
                    <th class="text-white text-center" style="width: 16%;">Имя</th>
                    <th class="text-white text-center" style="width: 16%;">Фамилия</th>
                    <th class="text-white text-center" style="width: 16%;">Номер телефона</th>
                    <th class="text-white text-center" style="width: 16%;">Почта</th>
                    <th class="text-white text-center" style="width: 10%;">Роль</th>
                    <th class="monday-school-color-blue text-center th-action" style="width: 10%; padding-right: 10px !important;">Действия</th>
                </tr>
                </thead>
                <tfoot>
                <tr>
                    <th class="text-center"></th>
                    <th class="text-center"></th>
                    <th class="text-center"></th>
                    <th class="text-center"></th>
                    <th class="text-center"></th>
                    <th class="text-center"></th>
                    <th class="text-center"></th>
                </tr>
                </tfoot>
                <tbody>
                @foreach (var userIdentity in Model)
                {
                    <tr>
                        <td class="text-center">@userIdentity.UserName</td>
                        <td class="text-center">@userIdentity.FirstName</td>
                        <td class="text-center">@userIdentity.LastName</td>
                        <td class="text-center">@userIdentity.PhoneNumber</td>
                        <td class="text-center">@userIdentity.Email</td>
                        <td class="text-center">
                            @(ViewBag.UserRoles.ContainsKey(userIdentity.Id) ? ViewBag.UserRoles[userIdentity.Id] : "Нет роли")
                        </td>
                        <td>
                            @if (User.Identity.Name != userIdentity.UserName)
                            {
                                <div class="dropdown text-center">
                                    <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button" id="actionDropdown-@userIdentity.Id" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="fa-solid fa-bars"></i>
                                    </button>
                                    <ul class="dropdown-menu">
                                        @if (userIdentity.LockoutEnd.HasValue)
                                        {
                                            <li>
                                                <button class="dropdown-item text-primary" data-bs-toggle="modal" data-bs-target="#UnBlockUserModal"
                                                        data-id="@userIdentity.Id"><i class="fa-solid fa-unlock"></i> Разблокировать
                                                </button>
                                            </li>
                                        }
                                        else
                                        {
                                            <li>
                                                <button class="dropdown-item text-danger" data-bs-toggle="modal" data-bs-target="#BlockUserModal"
                                                        data-id="@userIdentity.Id"><i class="fa-solid fa-lock"></i> Заблокировать
                                                </button>
                                            </li>
                                        }
                                        <li>
                                            <button class="dropdown-item text-danger" type="button" data-bs-toggle="modal" data-bs-target="#deleteUserModal"
                                                    data-id="@userIdentity.Id"><i class="fa-solid fa-trash me-2"></i> Удалить
                                            </button>
                                        </li>
                                    </ul>
                                </div>
                            }
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <h2 class="mt-3 text-center">В данный момент нет заявок.</h2>
    }
</div>


<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark">
            <div class="modal-header bg-white">
                <h1 class="modal-title monday-school-color-gradient fs-5" id="deleteUserModalLabel">Удалить сотрудника</h1>
                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteUserForm" method="post" asp-action="DeleteUser" asp-controller="Account">
                <div class="modal-body">
                    <p class="text-white">Вы точно хотите удалить этого сотрудника?</p>
                    <input type="hidden" name="id" id="deleteUserId" />
                </div>
                <div class="modal-footer border-top-0">
                    <button type="submit" class="btn btn-outline-danger monday-school-color-blue">Удалить</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="BlockUserModal" tabindex="-1" aria-labelledby="BlockUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark">
            <div class="modal-header bg-white">
                <h1 class="modal-title monday-school-color-gradient fs-5" id="BlockUserModalLabel">Заблокировать сотрудника</h1>
                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="BlockUserForm" method="post" asp-action="BlockUser">
                <div class="modal-body">
                    <p class="text-white">Вы точно хотите заблокировать этого сотрудника?</p>
                    <input type="hidden" name="id" id="BlockUserId" />
                </div>
                <div class="modal-footer border-top-0">
                    <button type="submit" class="btn btn-outline-danger monday-school-color-blue">Заблокировать</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="UnBlockUserModal" tabindex="-1" aria-labelledby="UnBlockUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark">
            <div class="modal-header bg-white">
                <h1 class="modal-title monday-school-color-gradient fs-5" id="UnBlockUserModalLabel">Разблокировать сотрудника</h1>
                <button type="button" class="btn-close text-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="UnBlockUserForm" method="post" asp-action="UnBlockUser">
                <div class="modal-body">
                    <p class="text-white">Вы точно хотите разблокировать этого сотрудника?</p>
                    <input type="hidden" name="id" id="UnBlockUserId" />
                </div>
                <div class="modal-footer border-top-0">
                    <button type="submit" class="btn btn-outline-danger monday-school-color-blue">Разблокировать</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="modal fade" id="createUserModal" tabindex="-1" aria-labelledby="createUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-dark border-0">
                <h5 class="modal-title monday-school-color-gradient" id="createUserModalLabel">Форма добавления нового пользователя</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body bg-dark border-0">
                <form asp-action="CreateUser" asp-controller="Account" asp-anti-forgery="true" id="createUserForm">
                    <div asp-validation-summary="ModelOnly" class="text-validation-error"></div>
                    <div class="mb-3 col-md-8 mx-auto">
                        <input type="text" id="UserName" name="UserName" class="form-control" placeholder="Введите логин...">
                        <div id="UserNameError" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    
                    <div class="mb-3 col-md-8 mx-auto">
                        <input type="text" class="form-control" name="Email" id="userEmail" placeholder="Укажите Почту...">
                        <div id="EmailError" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    
                    <div class="mb-3 col-md-8 mx-auto">
                        <input type="text" class="form-control" id="Firstname" name="Firstname" placeholder="Укажите Имя...">
                        <div id="FirstnameError" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    
                    <div class="mb-3 col-md-8 mx-auto">
                        <input type="text" class="form-control" name="Lastname" id="Lastname" placeholder="Укажите Фамилию...">
                        <div id="LastnameError" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    
                    <div class="mb-3 col-md-8 mx-auto">
                        <input type="number" class="form-control" name="PhoneNumber" id="phoneNumber" value="+996" placeholder="Укажите номер телефона...">
                        <div id="PhoneNumberError" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    
                    <div class="mb-3 col-md-8 mx-auto">
                        <select name="Role" id="userRole" class="form-control">
                            <option value="" disabled selected>Выберите роль</option>
                            <option value="director">Директор</option>
                            <option value="admin">Админ</option>
                        </select>
                        <div id="RoleError" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    
                    <div class="col-md-8 mx-auto mb-3 position-relative">
                        <input type="password" id="password-input" name="Password" class="form-control" placeholder="Введите пароль...">
                        <span toggle="#password-input" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                        <div id="PasswordError" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    
                    <div class="col-md-8 mx-auto mb-3 position-relative">
                        <input type="password" id="confirm-password-input" name="ConfirmPassword" class="form-control" placeholder="Подтвердите пароль...">
                        <span toggle="#confirm-password-input" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                        <div id="ConfirmPasswordError" class="text-danger mt-2" style="display: none;"></div>
                    </div>
                    
                    <div class="d-flex justify-content-center">
                        <button type="submit" class="btn btn-outline-light mb-3 mx-2" style="width: 200px;">Добавить пользователя</button>
                        <button type="button" class="btn btn-outline-danger mb-3 mx-2" data-bs-dismiss="modal" style="width: 200px;">Отмена</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function (){
            $('#users-table').DataTable({
                columnDeft: [
                     {
                        targets: 6,
                        orderable: false
                     }
                ],
                language: {
                    lengthMenu : "Показать _MENU_ записей",
                    search: "Поиск:",
                    info: "",
                    infoFiltered: "(отфильтровано из _MAX_ записей)",
                    infoEmpty: "Не найдено подходящих записей",
                    zeroRecords: "Нет записей",
                    paginate: {
                        previous: "<",
                        next: ">"
                    }
                },
                initComplete: function () {  //добавление фильтрация
                    this.api()
                        .columns()
                        .every(function () {
                            let column = this;
                            let columnIndex = column.index();
                            if (columnIndex !== 0 && columnIndex !== 1 && columnIndex !== 2 && columnIndex !== 3 && columnIndex !== 4 && columnIndex !== 5 && columnIndex !== 6)  // условия для добавления фильтров под определенными столбцами
                            {
                                let select = document.createElement('select');
                                select.add(new Option(''));
                                column.footer().replaceChildren(select);
                                
                                $(select).addClass('btn btn-dark') // добавление стилей через класс для select
                                
                                select.addEventListener('change', function () {
                                    column.search(select.value, {exact: true }).draw();
                                });
                                
                                column.data().unique().sort().each(function (d, j){
                                    select.add(new Option(d));
                                });
                            }
                    });
                }
            });
            
            $('#deleteUserModal').on('show.bs.modal', function (e) {
               let button = $(e.relatedTarget);
               let id = button.data('id');
               $('#deleteUserId').val(id); 
            });

            $('#BlockUserModal').on('show.bs.modal', function (e) {
                let button = $(e.relatedTarget);
                let id = button.data('id');
                $('#BlockUserId').val(id);
            });

            $('#UnBlockUserModal').on('show.bs.modal', function (e) {
                let button = $(e.relatedTarget);
                let id = button.data('id');
                $('#UnBlockUserId').val(id);
            });
            
            $(".toggle-password").addClass("fa-eye");
            $("#password").attr("type", "password");
            
            $(".toggle-password").click(function () {
                
                $(this).toggleClass("fa-eye fa-eye-slash");
                
                var input = $($(this).attr("toggle"))
                
                if (input.attr("type") === "password"){
                    input.attr("type", "text");
                } else {
                    input.attr("type", "password");
                }
            });
            
            $('#createUserModal').on('shown.bs.modal', function () {
                $('.text-danger').hide();
            });
            
            $('#createUserModal').on('hidden.bs.modal', function () {
                $('.text-danger').hide();
                $('#createUserForm')[0].reset();
            });
            
            $('#createUserForm').submit(function (event) {
                event.preventDefault();
                
                const userName = $('#UserName').val().trim();
                const firstName = $('#Firstname').val().trim();
                const lastName = $('#Lastname').val().trim();
                const phoneNumber = $('#phoneNumber').val().trim();
                const userEmail = $('#userEmail').val().trim();
                const userRole = $('#userRole').val();
                const password = $('#password-input').val();
                const confirmPassword = $('#confirm-password-input').val();
                
                $('.text-danger').hide();
                
                let validationPassed = true;
                
                function showError(field, message) {
                    $("#" + field + "Error").text(message).show();
                    validationPassed = false;
                }
                
                if (userName === ''){
                    showError('UserName', 'Логин обязателен к заполнению');
                    validationPassed = false;
                } else {
                    $.ajax({
                        url: '@Url.Action("CheckUserName", "Validation")',
                        type: 'GET',
                        data: {UserName: userName, Id: $('#Id').val() },
                        async: false,
                        success: function (response) {
                            if (!response) {
                                showError('UserName', 'Пользователь с таким логином уже существует');
                                validationPassed = false;
                            }
                        },
                        error: function () {
                            showError('UserName', 'Ошибка при проверка логина');
                            validationPassed = false;
                        }
                    });
                }
                
                if (userEmail === ''){
                    showError('Email', 'Почта обязательна для заполнения');
                    validationPassed = false;
                } else {
                    $.ajax({
                        url: '@Url.Action("CheckUserEmail", "Validation")',
                        type: 'GET',
                        data: {Email: userEmail, Id: $('#Id').val() },
                        async: false,
                        success: function (response) {
                            if (!response) {
                                showError('UserName', 'Пользователь с таким почтой уже существует');
                                validationPassed = false;
                            }
                        },
                        error: function () {
                            showError('UserName', 'Ошибка при проверка почты');
                            validationPassed = false;
                        }
                    });
                }
                if (!validationPassed){
                    return;
                }
                
                $.ajax({
                    url: '@Url.Action("CreateUser", "Account")',
                    type: 'POST',
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    contentType : 'application/json',
                    data: JSON.stringify({
                        UserName : userEmail,
                        FirstName : firstName,
                        LastName : lastName,
                        PhoneNumber : phoneNumber,
                        Email : userEmail,
                        Role : userRole,
                        Password : password,
                        ConfirmPassword : confirmPassword
                    }),
                    
                    success: function (response) {
                        if (response.success) {
                            $('#createUserModal').modal('hide');
                            window.location.reload();
                        } else {
                            if (response.error){
                                response.error.forEach(function (error) {
                                    const field = error.field;
                                    const errorMessages = error.errors.join(", ");
                                    $("#" + field + "Error").text(errorMessages).show();
                                });
                            }
                        }
                    },
                    error: function (error){
                        console.error("Ошибка AJAX-запроса:", error);
                        alert("Не удалось сохранить данные. Проверьте вводимые значения")
                    }
                });
            });
            
        });
    </script>
}